diff --git a/node_modules/react-native/react.gradle b/node_modules/react-native/react.gradle
index 2e9d8e5..5e8c301 100644
--- a/node_modules/react-native/react.gradle
+++ b/node_modules/react-native/react.gradle
@@ -102,20 +102,22 @@ def getHermesCommand = {
         }
     }
 
+    def hermescBin = Os.isFamily(Os.FAMILY_WINDOWS) ? 'hermesc.exe' : 'hermesc'
+
     // 2. If the project is building hermes-engine from source, use hermesc from there
     // Also note that user can override the hermes source location with
     // the `REACT_NATIVE_OVERRIDE_HERMES_DIR` env variable.
     def hermesOverrideDir = System.getenv("REACT_NATIVE_OVERRIDE_HERMES_DIR")
     def builtHermesc = hermesOverrideDir ?
-        new File(hermesOverrideDir, "build/bin/hermesc") :
-        new File(reactRoot, "node_modules/react-native/ReactAndroid/hermes-engine/build/hermes/bin/hermesc")
+        new File(hermesOverrideDir, "build/bin/$hermescBin") :
+        new File(reactRoot, "node_modules/react-native/ReactAndroid/hermes-engine/build/hermes/bin/$hermescBin")
 
     if (builtHermesc.exists()) {
         return builtHermesc.getAbsolutePath()
     }
 
     // 3. If the react-native contains a pre-built hermesc, use it.
-    def prebuiltHermesPath = "node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc"
+    def prebuiltHermesPath = "node_modules/react-native/sdks/hermesc/%OS-BIN%/$hermescBin"
         .replaceAll("%OS-BIN%", getHermesOSBin())
         .replace('/' as char, File.separatorChar);
     def prebuiltHermes = new File(reactRoot, prebuiltHermesPath)
